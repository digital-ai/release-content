---
apiVersion: xl-release/v1
kind: Templates
metadata:
  home: Digital.ai - Official/Workflow Executions
spec:
  - template: Create new ArgoCD Deployment Provider Configuration
    scheduledStartDate: 2024-08-28T09:00:00+02:00
    dueDate: 2024-08-28T10:00:00+02:00
    phases:
      - phase: Check Connection
        tasks:
          - name: Fetch connections
            type: xlrelease.ScriptTask
            script: |-
              folderId = getCurrentFolder().getId()
              releaseVariables["plainList"] = configurationApi.searchByTypeAndTitle("argocd.APIServer", "", folderId)
          - name: Add server configuration
            type: xlrelease.UserInputTask
            description: Please enter the required information below.
            precondition: |-
              if (releaseVariables["plainList"] == []):
                result = True
              else:
                result = False
            variables:
              - title
              - serverUrl
              - serverUsername
              - serverPassword
          - name: Create connection
            type: liveDeployments.CreateArgoServer
            folderId: Applications/Folderd2eca4b9bed9415ca430bd699421a9f8/Folder78478e1575a44a9cb76b1e3c300b31be
            ^title: "${title}"
            serverUrl: "${serverUrl}"
            serverUsername: "${serverUsername}"
            precondition: |-
              if (releaseVariables["plainList"] == []):
                result = True
              else:
                result = False
            variableMapping:
              pythonScript.serverPassword: "${serverPassword}"
        color: "#3d6c9e"
      - phase: Choose Connection
        tasks:
          - name: Choose connection
            type: xlrelease.UserInputTask
            description: Please enter the required information below.
            variables:
              - connections
      - phase: Configure connection
        tasks:
          - name: Configuration values
            type: xlrelease.UserInputTask
            description: Please enter the required information below.
            variables:
              - configTitle
              - configApps
          - name: Configure Live Deployment
            type: xlrelease.ScriptTask
            script: |-
              from com.xebialabs.xlrelease.domain import Configuration
              from com.xebialabs.deployit.plugin.api.reflect import Type
              
              folderId = getCurrentFolder().getId()
              liveDeploymentConfiguration = Configuration()
              
              liveDeploymentConfiguration.type = Type.valueOf("argocd.DeploymentConfig")
              liveDeploymentConfiguration.title = "${configTitle}"
              if (folderId != ""):
                liveDeploymentConfiguration.folderId = folderId
              liveDeploymentConfiguration.setProperty("application", "${configApps}")
              
              liveDeploymentConfiguration = configurationApi.addConfiguration(liveDeploymentConfiguration)
              
              releaseVariables['liveDeploymentConfig'] = liveDeploymentConfiguration.getId()
          - name: Configure HTTP endpoint and Source Webhook
            type: xlrelease.ScriptTask
            script: |-
              folderId = getCurrentFolder().getId()
              server = releaseVariables['connections']
              
              liveDeploymentApi.setupApplicationStatusWebhook(folderId, server, "${liveDeploymentConfig}")
        color: "#3d6c9e"
      - phase: Final
        tasks:
          - name: Final steps
            type: xlrelease.Task
            description: |-
              **DIGITAL.ai Release**
              - LiveDeployment was configured successfully in Release.
              
              **Target deployment provider**
              Copy the manifest below and apply it on cluster running the ArgoCD. See the documentation on below link to check details on how to enable Webhook events for your ArgoCD applciations.
              
              ```
              apiVersion: v1
              kind: ConfigMap
              metadata:
                creationTimestamp: null
                name: argocd-notifications-cm
              data:
                service.webhook.release-webhook: |
                  url: http://admins-MBP-18:5516/webhooks/path-4b2dda7d-a76b-46ce-be66-02c272de23c4
                  headers:
                  - name: Content-Type
                    value: application/json
                  - name: X-Release-Webhook-Token
                    value:
                  subscriptions: |
                    - recipients
                      - release-webhook
                      triggers:
                      - on-app-status-changed
              
                template.app-status-changed: |
                  webhook:
                    release-webhook:
                      method: POST
                      body: "{{.app | toJson }}"
              
                trigger.on-app-status-changed: |
                  - description: Application health status is unknown.
                    when: app.status.health.status == 'Unknown' and app.metadata.deletionTimestamp == nil
                    send: [app-status-changed]
                  - description: Application health status is progressing.
                    when: app.status.health.status == 'Progressing' and app.metadata.deletionTimestamp == nil
                    send: [app-status-changed]
                  - description: Application health status is suspended.
                    when: app.status.health.status == 'Suspended' and app.metadata.deletionTimestamp == nil
                    send: [app-status-changed]
                  - description: Application health status is healthy.
                    when: app.status.health.status == 'Healthy' and app.metadata.deletionTimestamp == nil
                    send: [app-status-changed]
                  - description: Application health status is degraded.
                    when: app.status.health.status == 'Degraded' and app.metadata.deletionTimestamp == nil
                    send: [app-status-changed]
                  - description: Application health status is missing.
                    when: app.status.health.status == 'Missing' and app.metadata.deletionTimestamp == nil
                    send: [app-status-changed]
                  - description: Application sync status is unknown.
                    when: app.status.sync.status == 'Unknown' and app.metadata.deletionTimestamp == nil
                    send: [app-status-changed]
                  - description: Application sync status is synced.
                    when: app.status.sync.status == 'Synced' and app.metadata.deletionTimestamp == nil
                    send: [app-status-changed]
                  - description: Application sync status is out of sync.
                    when: app.status.sync.status == 'OutOfSync' and app.metadata.deletionTimestamp == nil
                    send: [app-status-changed]
                  - description: Application is deleted.
                    when: app.metadata.deletionTimestamp != nil
                    send: [app-status-changed]
              ```
        color: "#3d6c9e"
    kind: WORKFLOW
    variables:
      - type: xlrelease.ReferenceVariable
        key: connections
        showOnReleaseStart: false
        label: Connections
        referencedType: argocd.APIServer
      - type: xlrelease.StringVariable
        key: serverUrl
        requiresValue: false
        showOnReleaseStart: false
        label: URL
      - type: xlrelease.StringVariable
        key: serverUsername
        showOnReleaseStart: false
        label: Username
        value: admin
      - type: xlrelease.PasswordStringVariable
        key: serverPassword
        showOnReleaseStart: false
        label: Password
      - type: xlrelease.StringVariable
        key: title
        showOnReleaseStart: false
        label: Deployment Server Configuration Name
        description: Name for the ArgoCD server connection.
        value: argoCD server
      - type: xlrelease.ListStringVariable
        key: plainList
        requiresValue: false
        showOnReleaseStart: false
        label: List
      - type: xlrelease.StringVariable
        key: httpEvent
        requiresValue: false
        showOnReleaseStart: false
        label: HttpEventId
      - type: xlrelease.StringVariable
        key: eventSource
        requiresValue: false
        showOnReleaseStart: false
        label: EventSourceId
      - type: xlrelease.StringVariable
        key: liveDeploymentConfig
        requiresValue: false
        showOnReleaseStart: false
        label: Script
        description: Script
      - type: xlrelease.StringVariable
        key: configTitle
        showOnReleaseStart: false
        label: Configuration Title
      - type: xlrelease.StringVariable
        key: configApps
        showOnReleaseStart: false
        label: Applications
        value: .*
    disableNotifications: true
    author: Digital.ai
    logo:
      type: xlrelease.TemplateLogo
      contentType: image/svg+xml
      file: !file "template-logo/a3175dad2e24c9ec6103e96176fe39b6e76f7c06/argocd.svg"
    defaultTargetFolder: Digital.ai - Official/Workflow Executions
