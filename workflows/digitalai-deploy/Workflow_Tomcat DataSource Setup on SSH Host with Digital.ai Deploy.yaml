---
apiVersion: xl-release/v1
kind: Templates
metadata:
  home: Digital.ai - Official/Workflows/Digital.ai Deploy
spec:
- template: Tomcat DataSource Setup on SSH Host with Digital.ai Deploy
  description: "Easily create an application in Digital.ai Deploy that can be used\
    \ to create a DataSource in a Remote Tomcat Server, including its respective environment\
    \ and infrastructure setup."
  scheduledStartDate: 2023-03-23T03:30:00Z
  dueDate: 2023-03-23T04:30:00Z
  phases:
  - phase: Setup Infra and Env
    tasks:
    - name: Specify Run As User
      type: xlrelease.UserInputTask
      description: Specify the Run As user. All automated tasks in the workflow will
        be run as the specified user.
      variables:
      - run-as-user
      - run-as-password
    - name: Specify Deploy Server Details
      type: xlrelease.UserInputTask
      description: Select the Digital.ai Deploy Server Connection onto which the Tomcat
        application has to be created. You can create a new connection if you have
        not created one.
      owner: admin
      variables:
      - deploy-server
    - name: Specify Environment Name
      type: xlrelease.UserInputTask
      description: Specify the name of the environment CI to be created in the Digital.ai
        Deploy Server.
      owner: admin
      variables:
      - environment-name
    - name: Create Environment
      type: deploy.CreateCI
      description: Creates an environment CI with the given name in the Digital.ai
        Deploy Server.
      owner: admin
      variableMapping:
        server: "${deploy-server}"
      capabilities:
      - remote
      ciID: "Environments/${environment-name}"
      ciType: udm.Environment
      jsonDescriptor: "{}"
    - name: Specify Tomcat Host Parameters
      type: xlrelease.UserInputTask
      description: Specify the SSH connection details to the host where the Tomcat
        installation resides.
      owner: admin
      variables:
      - host-identifier
      - sudo-username
      - os
      - address
      - port
      - ssh-username
      - ssh-privatekey
    - name: Configure Remote Host
      type: deploy.CreateCI
      description: Creates an Overthere SSH Host CI in the Digital.ai Deploy Server
        with the details specified in the previous step.
      owner: admin
      variableMapping:
        server: "${deploy-server}"
      capabilities:
      - remote
      ciID: "Infrastructure/${host-identifier}"
      ciType: overthere.SshHost
      jsonDescriptor: |-
        {
            "stagingDirectoryPath":"",
            "sudoUsername":"${sudo-username}",
            "suUsername":"",
            "suPassword":"",
            "os":"${os}",
            "connectionType":"SUDO",
            "address":"${address}",
            "port":"${port}",
            "username":"${ssh-username}",
            "password":"",
            "privateKeyFile":"${ssh-privatekey}",
            "passphrase":""
        }
      addToEnvironment: true
      envID: "Environments/${environment-name}"
    - name: Check Remote Host Connection
      type: deploy.ControlTask
      description: Runs a Check Connection control task on the created SSH host CI
        in the Digital.ai Deploy server to validate the specified credentials.
      owner: admin
      variableMapping:
        server: "${deploy-server}"
      capabilities:
      - remote
      ciId: "Infrastructure/${host-identifier}"
      taskName: checkConnection
      numberOfContinueRetrials: 0
      pollingInterval: 10
      numberOfPollingTrials: 0
      displayStepLogs: true
      connectionRetries: 10
    - name: Specify Tomcat Server Parameters
      type: xlrelease.UserInputTask
      description: Specify the Tomcat installation details.
      owner: admin
      variables:
      - server-name
      - tomcat-home
      - tomcat-start-command
      - tomcat-stop-command
      - tomcat-status-command
      - tomcat-status-exptected-output
    - name: Configure Tomcat Server
      type: deploy.CreateCI
      description: Creates an Tomcat server CI in the Digital.ai Deploy Server with
        the details specified in the previous step.
      owner: admin
      variableMapping:
        server: "${deploy-server}"
      capabilities:
      - remote
      ciID: "Infrastructure/${host-identifier}/${server-name}"
      ciType: tomcat.Server
      jsonDescriptor: |-
        {
            "home":"${tomcat-home}",
            "startCommand":"${tomcat-start-command}",
            "stopCommand":"${tomcat-stop-command}",
            "statusCommand":"${tomcat-status-command}",
            "statusCommandExpectedOutput":"${tomcat-status-exptected-output}",
            "startWaitTime":"0",
            "stopWaitTime":"0",
            "serverStartupTime":"0",
            "serverShutdownTime":"0",
            "tomcatRunningPort":""
        }
      addToEnvironment: true
      envID: "Environments/${environment-name}"
    - name: Check Tomcat Status
      type: deploy.ControlTask
      description: Runs a Check Status control task on the created Tomcat server CI
        in the Digital.ai Deploy server to validate the specified credentials.
      owner: admin
      variableMapping:
        server: "${deploy-server}"
      capabilities:
      - remote
      ciId: "Infrastructure/${host-identifier}/${server-name}"
      taskName: status
      numberOfContinueRetrials: 0
      pollingInterval: 10
      numberOfPollingTrials: 0
      displayStepLogs: true
      connectionRetries: 10
    - name: Specify Tomcat Virtual Host Name
      type: xlrelease.UserInputTask
      description: Specify the name of the virtual host CI to be created within the
        Tomcat serverCI in Digital.ai Deploy server.
      owner: admin
      variables:
      - virtual-host-name
    - name: Configure Tomcat VirtualHost
      type: deploy.CreateCI
      description: Creates an Tomcat VirtualHost CI in the Digital.ai Deploy Server
        with the details specified in the previous step.
      owner: admin
      variableMapping:
        server: "${deploy-server}"
      capabilities:
      - remote
      ciID: "Infrastructure/${host-identifier}/${server-name}/${virtual-host-name}"
      ciType: tomcat.VirtualHost
      jsonDescriptor: "{}"
      addToEnvironment: true
      envID: "Environments/${environment-name}"
  - phase: Setup Application
    tasks:
    - name: Specify Application Name
      type: xlrelease.UserInputTask
      description: Specify the name of the application to be created in the Digital.ai
        Deploy server.
      owner: admin
      variables:
      - application-name
    - name: Setup Application
      type: deploy.CreateCI
      description: Creates an application with the specified name in the Digital.ai
        Deploy server.
      owner: admin
      variableMapping:
        server: "${deploy-server}"
      capabilities:
      - remote
      ciID: "Applications/${application-name}"
      ciType: udm.Application
      jsonDescriptor: "{}"
    - name: Specify Package Name
      type: xlrelease.UserInputTask
      description: Specify a package name to be created within the application created
        in Digital.ai Deploy server in the previous step.
      owner: admin
      variables:
      - package-name
    - name: Create Deployment Package
      type: deploy.CreateCI
      description: Creates a deployment package with the specfied name in the application
        created in Digital.ai Deploy server.
      owner: admin
      variableMapping:
        server: "${deploy-server}"
      capabilities:
      - remote
      ciID: "Applications/${application-name}/1.0"
      ciType: udm.DeploymentPackage
      jsonDescriptor: "{}"
    - name: Specify Tomcat Datasource
      type: xlrelease.UserInputTask
      description: "Specify the Tomcat dataSource inforrmation, which will be used\
        \ to create a DataSourceSpec CI in Digital.ai Deploy server."
      owner: admin
      variables:
      - datasource-name
      - jndi-name
      - datasource-context
      - database-driver-class-name
      - database url
      - db-username
      - db-password
    - name: Create Sample Tomcat DataSourceSpec
      type: deploy.CreateCI
      description: Creates the Tomcat DataSource CI in the Digital.ai Deploy server
        with the details specified in the previous step.
      owner: admin
      variableMapping:
        server: "${deploy-server}"
      capabilities:
      - remote
      ciID: "Applications/${application-name}/${package-name}/${datasource-name}"
      ciType: tomcat.DataSourceSpec
      jsonDescriptor: |-
        {
            "context":"${datasource-context}",
            "jndiName":"${jndi-name}",
            "driverClassName":"${database-driver-class-name}",
            "url":"${database url}",
            "username":"${db-username}",
            "password":"${db-password}"
        }
    - name: Add Managed Application
      type: xlrelease.ScriptTask
      description: Adds the created Azure Resource Group application to the Digital.ai
        Release managed application list.
      owner: admin
      script: |-
        from com.xebialabs.xlrelease.api.v1.views import ManagedApplicationView
        from com.xebialabs.xlrelease.api.v1.views import ConnectionServerView
        from java.util import Date
        from java.text import SimpleDateFormat
        import datetime

        parsedDate = datetime.datetime.now()

        requestBody = ManagedApplicationView()
        requestBody.applicationName = "${application-name}"
        requestBody.managedBy = "Digital.ai Deploy"
        requestBody.dateCreated = parsedDate
        requestBody.environmentTag = "${environment-name}"
        requestBody.applicationReference = "${application-name}"

        connectionServer = ConnectionServerView('${deploy-server}', '', '', '')
        requestBody.connectionServer = connectionServer

        res = managedApplicationApi.addManagedApplication(requestBody)
    color: '#3d6c9e'
  kind: WORKFLOW
  categories:
  - Application onboarding
  variables:
  - type: xlrelease.StringVariable
    key: environment-name
    value: tomcat-env
  - type: xlrelease.StringVariable
    key: host-identifier
    description: Name of the SSH host CI to be created in Digital.ai Deploy server
    value: tomcat-host
  - type: xlrelease.StringVariable
    key: address
    description: SSH host address
    value: 1.2.3.4
  - type: xlrelease.StringVariable
    key: os
    description: UNIX|WINDOWS|ZOS
    value: UNIX
  - type: xlrelease.StringVariable
    key: port
    description: SSH port
    value: "22"
  - type: xlrelease.StringVariable
    key: ssh-privatekey
    description: Path to the SSH key file
    value: private-key-path
  - type: xlrelease.StringVariable
    key: ssh-username
    description: SSH username
    value: ssh-username
  - type: xlrelease.StringVariable
    key: sudo-username
    description: SUDO username
    value: sudo-username
  - type: xlrelease.StringVariable
    key: application-name
    value: tomcat-app
  - type: xlrelease.StringVariable
    key: package-name
    value: "1.0"
  - type: xlrelease.StringVariable
    key: tomcat-home
    value: tomcat-home
  - type: xlrelease.StringVariable
    key: tomcat-start-command
    value: systemctl start tomcat
  - type: xlrelease.StringVariable
    key: tomcat-status-command
    value: systemctl status tomcat
  - type: xlrelease.StringVariable
    key: tomcat-status-exptected-output
    value: active (running)
  - type: xlrelease.StringVariable
    key: tomcat-stop-command
    value: systemctl stop tomcat
  - type: xlrelease.StringVariable
    key: database url
    value: database url
  - type: xlrelease.StringVariable
    key: database-driver-class-name
    value: database-driver-class-name
  - type: xlrelease.StringVariable
    key: datasource-context
    value: datasource-context
  - type: xlrelease.StringVariable
    key: db-password
    value: db-password
  - type: xlrelease.StringVariable
    key: db-username
    value: db-username
  - type: xlrelease.StringVariable
    key: jndi-name
    value: jndi-name
  - type: xlrelease.StringVariable
    key: server-name
    value: tomcat-server
  - type: xlrelease.StringVariable
    key: virtual-host-name
    value: virtual-host
  - type: xlrelease.StringVariable
    key: datasource-name
    value: sample-datasource
  - type: xlrelease.ReferenceVariable
    key: deploy-server
    showOnReleaseStart: false
    label: Deploy Server
    referencedType: digitalai.DeployServer
  - type: xlrelease.PasswordStringVariable
    key: run-as-password
    showOnReleaseStart: false
    label: Run as password
  - type: xlrelease.StringVariable
    key: run-as-user
    showOnReleaseStart: false
    label: Run as user
  scriptUsername: "${run-as-user}"
  variableMapping:
    scriptUserPassword: "${run-as-password}"
  author: Digital.ai
  logo:
    type: xlrelease.TemplateLogo
    contentType: image/svg+xml
    file: !file "template-logo/xlr-xld-plugin.svg"
  defaultTargetFolder: Digital.ai - Official/Workflow Executions
