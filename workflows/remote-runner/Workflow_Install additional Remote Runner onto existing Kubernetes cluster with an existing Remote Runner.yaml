---
apiVersion: xl-release/v1
kind: Templates
metadata:
  home: Digital.ai - Official/Workflows/Remote runner
spec:
  - template: Install additional Remote Runner onto existing Kubernetes cluster with
      an existing Remote Runner
    scheduledStartDate: 2023-12-22T09:00:00+01:00
    dueDate: 2023-12-22T10:00:00+01:00
    phases:
      - phase: Workflow tasks
        tasks:
          - name: Input for remote runner installation
            type: xlrelease.UserInputTask
            description: Please enter the required information below.
            variables:
              - kubernetesApiServer
              - namespace
              - remoteRunnerName
              - remoteRunnerImage
              - releaseUrl
              - token
          - name: Check if namespace exists
            type: kubernetes.ExistsNamespace
            variableMapping:
              server: "${kubernetesApiServer}"
              commandResponse: "${namespaceExistsResponse}"
            capabilities:
              - remote
            namespace: "${namespace}"
          - name: Create remote runner namespace
            type: kubernetes.CreateNamespace
            precondition: |-
              if releaseVariables['namespaceExistsResponse']['exists'] == 'false':
                result = True
              else:
                result = False
            variableMapping:
              server: "${kubernetesApiServer}"
            capabilities:
              - remote
            namespace: "${namespace}"
          - name: Create remote runner resources
            type: kubernetes.Apply
            variableMapping:
              server: "${kubernetesApiServer}"
            capabilities:
              - remote
            yamlContent: |-
              ---
              # Source: remote-runner/templates/service-account.yaml
              apiVersion: v1
              kind: ServiceAccount
              metadata:
                name: ${remoteRunnerName}
                namespace: "${namespace}"
                labels:
                  app.kubernetes.io/name: remote-runner
                  helm.sh/chart: remote-runner-0.1.0
                  app.kubernetes.io/instance: my-release
                  app.kubernetes.io/managed-by: Helm
              ---
              # Source: remote-runner/templates/secrets.yaml
              apiVersion: v1
              kind: Secret
              metadata:
                name: ${remoteRunnerName}-registration-token
                namespace: "${namespace}"
                labels:
                  app.kubernetes.io/name: remote-runner
                  helm.sh/chart: remote-runner-0.1.0
                  app.kubernetes.io/instance: my-release
                  app.kubernetes.io/managed-by: Helm
              type: Opaque
              stringData:
                token: "${token} "
              ---
              # Source: remote-runner/templates/configmaps.yaml
              apiVersion: v1
              kind: ConfigMap
              metadata:
                name: ${remoteRunnerName}-env-config
                namespace: "${namespace}"
                labels:
                  app.kubernetes.io/name: remote-runner
                  helm.sh/chart: remote-runner-0.1.0
                  app.kubernetes.io/instance: my-release
                  app.kubernetes.io/managed-by: Helm
              data:
                {}
              ---
              # Source: remote-runner/templates/service-account.yaml
              apiVersion: rbac.authorization.k8s.io/v1
              kind: Role
              metadata:
                name: ${remoteRunnerName}
                namespace: "${namespace}"
                labels:
                  app.kubernetes.io/name: remote-runner
                  helm.sh/chart: remote-runner-0.1.0
                  app.kubernetes.io/instance: my-release
                  app.kubernetes.io/managed-by: Helm
              rules:
                - apiGroups:
                    - ""
                  resources:
                    - pods
                  verbs:
                    - get
                    - list
                    - watch
                    - create
                    - update
                    - patch
                    - delete
                - apiGroups:
                    - ""
                  resources:
                    - pods/log
                  verbs:
                    - get
                    - list
                - apiGroups:
                    - ""
                  resources:
                    - pods/exec
                  verbs:
                    - create
                - apiGroups:
                    - ""
                  resources:
                    - secrets
                  verbs:
                    - get
                    - create
                    - update
                    - delete
                    - list
                    - patch
                    - watch
                - apiGroups:
                    - ""
                  resources:
                    - serviceaccounts
                  verbs:
                    - get
                    - create
                    - delete
                - apiGroups:
                    - rbac.authorization.k8s.io
                  resources:
                    - roles
                    - rolebindings
                  verbs:
                    - get
                    - create
                    - delete
              ---
              # Source: remote-runner/templates/service-account.yaml
              kind: RoleBinding
              apiVersion: rbac.authorization.k8s.io/v1
              metadata:
                name: ${remoteRunnerName}
                namespace: "${namespace}"
                labels:
                  app.kubernetes.io/name: remote-runner
                  helm.sh/chart: remote-runner-0.1.0
                  app.kubernetes.io/instance: my-release
                  app.kubernetes.io/managed-by: Helm
              roleRef:
                kind: Role
                name: ${remoteRunnerName}
                apiGroup: rbac.authorization.k8s.io
              subjects:
                - kind: ServiceAccount
                  name: ${remoteRunnerName}
                  namespace: "${namespace}"
              ---
              # Source: remote-runner/templates/statefulset.yaml
              apiVersion: v1
              kind: Service
              metadata:
                name: ${remoteRunnerName}-headless
                namespace: "${namespace}"
                labels:
                  app.kubernetes.io/name: remote-runner
                  helm.sh/chart: remote-runner-0.1.0
                  app.kubernetes.io/instance: my-release
                  app.kubernetes.io/managed-by: Helm
              spec:
                clusterIP: None
                selector:
                  app: ${remoteRunnerName}
              ---
              # Source: remote-runner/templates/statefulset.yaml
              apiVersion: apps/v1
              kind: StatefulSet
              metadata:
                name: ${remoteRunnerName}
                namespace: "${namespace}"
                labels:
                  app.kubernetes.io/name: remote-runner
                  helm.sh/chart: remote-runner-0.1.0
                  app.kubernetes.io/instance: my-release
                  app.kubernetes.io/managed-by: Helm
              spec:
                serviceName: ${remoteRunnerName}-headless
                podManagementPolicy: Parallel
                replicas: 1
                updateStrategy:
                  type: RollingUpdate
                selector:
                  matchLabels:
                    app.kubernetes.io/name: remote-runner
                    app.kubernetes.io/instance: my-release
                    app: ${remoteRunnerName}
                template:
                  metadata:
                    labels:
                      app.kubernetes.io/name: remote-runner
                      helm.sh/chart: remote-runner-0.1.0
                      app.kubernetes.io/instance: my-release
                      app.kubernetes.io/managed-by: Helm
                      app: ${remoteRunnerName}
                    annotations:
                      checksum/config: a8c057bd11fa913d3aee52c40a3a4892c51ff6cf1a4e4171b2fb89a29268bf68
                      checksum/secret: b758b5aa5a17777f33478760a9a9d6074dedc3d0b892ee6a8f13b46ab3c635d2
                  spec:
                    serviceAccountName: ${remoteRunnerName}
                    affinity:
                      podAntiAffinity:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          - podAffinityTerm:
                              labelSelector:
                                matchLabels:
                                  app.kubernetes.io/name: remote-runner
                                  app.kubernetes.io/instance: my-release
                              namespaces:
                                - "${namespace}"
                              topologyKey: kubernetes.io/hostname
                            weight: 1
                    dnsPolicy: ClusterFirst
                    hostNetwork: false
                    terminationGracePeriodSeconds: 200
                    containers:
                      - name: remote-runner
                        image: "${remoteRunnerImage}"
                        imagePullPolicy: "IfNotPresent"
                        env:
                          - name: RELEASE_RUNNER_NAME
                            valueFrom:
                              fieldRef:
                                fieldPath: metadata.name
                          - name: RELEASE_RUNNER_KUBERNETES_SERVICE_NAME
                            value: ${remoteRunnerName}-headless
                          - name: RELEASE_RUNNER_RELEASE_URL
                            value: "${releaseUrl}"
                          - name: RELEASE_RUNNER_TOKEN
                            valueFrom:
                              secretKeyRef:
                                name: ${remoteRunnerName}-registration-token
                                key: token
                          - name: RELEASE_RUNNER_CAPABILITIES
                            value: remote,remote-script,container,k8s
                          - name: RELEASE_RUNNER_KUBERNETES_NAMESPACE
                            value: "${namespace}"
                          - name: RELEASE_RUNNER_PROFILE
                            value: "k8s,json-logging"
                          - name: RELEASE_RUNNER_KUBERNETES_IN_CLUSTER_CONFIG
                            value: "true"
                          - name: RELEASE_RUNNER_STORE_NAME
                            value: "/workspace/db/runner-store.db"
                        envFrom:
                          - configMapRef:
                              name: ${remoteRunnerName}-env-config
                              optional: true
                        livenessProbe:
                          httpGet:
                            path: /live
                            port: 8686
                          initialDelaySeconds: 10
                          periodSeconds: 5
                          failureThreshold: 12
                        readinessProbe:
                          httpGet:
                            path: /ready
                            port: 8686
                          initialDelaySeconds: 10
                          periodSeconds: 5
                          failureThreshold: 12
                        resources:
                          limits:
                            cpu: "4"
                            memory: 1G
                          requests:
                            cpu: "0.5"
                            memory: 512Mi
            namespace: "${namespace}"
    kind: WORKFLOW
    categories:
      - Install remote runner
    variables:
      - type: xlrelease.StringVariable
        key: namespace
        requiresValue: false
        showOnReleaseStart: false
        label: Namespace
        description: Kubernetes namespace where remote runner will be installed
        value: digitalai
      - type: xlrelease.StringVariable
        key: remoteRunnerImage
        requiresValue: false
        showOnReleaseStart: false
        label: Remote Runner image
        value: xebialabs/release-remote-runner:23.3.0
      - type: xlrelease.StringVariable
        key: releaseUrl
        requiresValue: false
        showOnReleaseStart: false
        label: Release URL
        description: Release URL for remote runner to register
        value: http://host.k3d.internal:5516
      - type: xlrelease.StringVariable
        key: token
        requiresValue: false
        showOnReleaseStart: false
        label: Runner registration token
      - type: xlrelease.ReferenceVariable
        key: kubernetesApiServer
        requiresValue: false
        showOnReleaseStart: false
        label: Kubernetes API server
        description: Kubernetes API server to install remote runner
        referencedType: kubernetes.APIServer
      - type: xlrelease.MapStringStringVariable
        key: namespaceExistsResponse
        requiresValue: false
        showOnReleaseStart: false
        label: Command Response
        description: Command Response
      - type: xlrelease.StringVariable
        key: remoteRunnerName
        requiresValue: false
        showOnReleaseStart: false
        label: Remote Runner name
        value: remote-runner
    allowPasswordsInAllFields: true
    disableNotifications: true
    author: admin
    defaultTargetFolder: Digital.ai - Official/Workflows/Remote runner
